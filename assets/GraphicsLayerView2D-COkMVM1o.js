import{ab as o,ac as g,a7 as m,H as l,a0 as a,r as p,t as n,x as c}from"./index-CorgkmYx.js";import{j as d,y as u}from"./LayerView-B_LYWc0j.js";import{t as w}from"./GraphicContainer-GLfpc-Lz.js";import{F as y}from"./GraphicsView2D-Bm5etaSP.js";import{e as V}from"./HighlightCounter-Czi-fdpx.js";import"./Container-yTUYF4yS.js";import"./layerViewUtils-D4hXBzvT.js";import"./AGraphicContainer-I6Mrvoq0.js";import"./TechniqueInstance-BSCwMDx7.js";import"./UpdateTracking2D-CdU6XMPT.js";import"./BidiEngine-DbrA89if.js";import"./OptimizedFeature-D3320lj0.js";import"./GeometryUtils-3SWYQTYM.js";import"./Rect-CUzevAry.js";import"./LabelMetric-CU7whMwu.js";import"./Program-Do7oUrQX.js";import"./BufferObject-DVepJ7vL.js";import"./VertexElementDescriptor-BLyltQyJ.js";import"./BindType-BmZEZMMh.js";import"./Util-CmRrkheM.js";import"./TileContainer-DsuZ5ROD.js";import"./WGLContainer-bPMGktCv.js";import"./VertexArrayObject-CdgTI6fD.js";import"./ProgramTemplate-CrjRRSf3.js";import"./vec3f32-nZdmKIgz.js";import"./StyleDefinition-DFIPW0dA.js";import"./config-BOD8--da.js";import"./earcut-D9gy186-.js";import"./featureConversionUtils-CW0ryXfc.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./FeatureCommandQueue-BHjvkz0y.js";import"./constants-F8oTIn7N.js";import"./AttributeStore-BSZEeOzN.js";import"./TimeOnly-DVJukkn2.js";import"./timeSupport-CzHAgiUR.js";import"./queryUtils-CwRl2kBy.js";import"./json-BLezgqVO.js";import"./normalizeUtilsSync-D3JWlL2G.js";let s=class extends d(u){constructor(){super(...arguments),this._highlightCounter=new V}attach(){this.graphicsView=new y({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new w(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),this.watch("layer.visible",i=>{i&&(this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate())})]),this._updateHighlights()}detach(){this.container.removeAllChildren(),this.graphicsView=o(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="default"){let r;typeof i=="number"?r=[i]:i instanceof g?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):m.isCollection(i)&&i.length>0&&(r=i.map(h=>h&&h.uid).toArray());const e=r==null?void 0:r.filter(l);return e!=null&&e.length?(this._addHighlight(e,t),a(()=>this._removeHighlight(e,t))):a()}_addHighlight(i,t){this._highlightCounter.addGroup(i,t),this._updateHighlights()}_removeHighlight(i,t){this._highlightCounter.deleteGroup(i,t),this._updateHighlights()}_updateHighlights(){var t;const i=[];for(const r of this._highlightCounter.ids()){const e=this._highlightCounter.getHighlightGroups(r),h=this._getHighlightBits(e);i.push({objectId:r,highlightFlags:h})}(t=this.graphicsView)==null||t.setHighlight(i)}};p([n()],s.prototype,"graphicsView",void 0),s=p([c("esri.views.2d.layers.GraphicsLayerView2D")],s);const ei=s;export{ei as default};
