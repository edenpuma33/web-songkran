import{l as s,u as d,r,t as n,v as l,Q as i,z as u,R as m,x as a}from"./index-CorgkmYx.js";let e=class extends s{constructor(o){super(o),this.globalId=null,this.associationType=null,this.fromNetworkElement=null,this.toNetworkElement=null,this.geometry=null,this.errorMessage=null,this.percentAlong=null,this.errorCode=null,this.isContentVisible=null,this.status=null}readFromNetworkElement(o,t){return new d({globalId:t.fromGlobalId,networkSourceId:t.fromNetworkSourceId,terminalId:t.fromTerminalId})}writeFromNetworkElement(o,t){o&&(t.fromGlobalId=o.globalId,t.fromNetworkSourceId=o.networkSourceId,t.fromTerminalId=o.terminalId)}readToNetworkElement(o,t){return new d({globalId:t.toGlobalId,networkSourceId:t.toNetworkSourceId,terminalId:t.toTerminalId})}writeToNetworkElement(o,t){o&&(t.toGlobalId=o.globalId,t.toNetworkSourceId=o.networkSourceId,t.toTerminalId=o.terminalId)}};r([n({type:String,json:{write:!0}})],e.prototype,"globalId",void 0),r([n({type:l.apiValues,json:{type:l.jsonValues,read:l.read,write:l.write}})],e.prototype,"associationType",void 0),r([n({type:d,json:{write:{target:{fromGlobalId:{type:String},fromNetworkSourceId:{type:Number},fromTerminalId:{type:Number}}},read:{source:["fromGlobalId","fromNetworkSourceId","fromTerminalId"]}}})],e.prototype,"fromNetworkElement",void 0),r([i("fromNetworkElement")],e.prototype,"readFromNetworkElement",null),r([u("fromNetworkElement")],e.prototype,"writeFromNetworkElement",null),r([n({type:d,json:{write:{target:{toGlobalId:{type:String},toNetworkSourceId:{type:Number},toTerminalId:{type:Number}}},read:{source:["toGlobalId","toNetworkSourceId","toTerminalId"]}}})],e.prototype,"toNetworkElement",void 0),r([i("toNetworkElement")],e.prototype,"readToNetworkElement",null),r([u("toNetworkElement")],e.prototype,"writeToNetworkElement",null),r([n({type:m,json:{write:!0}})],e.prototype,"geometry",void 0),r([n({type:String,json:{write:!0}})],e.prototype,"errorMessage",void 0),r([n({type:Number,json:{write:!0}})],e.prototype,"percentAlong",void 0),r([n({type:Number,json:{write:!0}})],e.prototype,"errorCode",void 0),r([n({type:Boolean,json:{write:!0}})],e.prototype,"isContentVisible",void 0),r([n({type:Number,json:{write:!0}})],e.prototype,"status",void 0),e=r([a("esri.rest.networks.support.Association")],e);const w=e;export{w as d};
