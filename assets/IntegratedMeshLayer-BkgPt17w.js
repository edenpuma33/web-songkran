import{l as I,ci as x,e0 as L,aW as _,iE as b,bk as N,r as i,t as n,z as R,x as h,el as M,a7 as A,I as J,D as V,ez as $,eo as j,ep as D,cO as E,eq as P,eA as U,eB as K,c9 as z,d5 as G,bc as k,s as c,a3 as S,eU as q,cP as C,Q as B,eG as F}from"./index-CorgkmYx.js";import{j as f}from"./persistable-DEHQmbOx.js";import{R as H,V as w}from"./SceneService-D_nqHM9F.js";import{p as Q,a as W,y as Z,m as X}from"./I3SLayerDefinitions-CCgdW8Ea.js";import{$ as T,Z as Y,w as ee}from"./elevationInfoUtils-D8HWlcTj.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceExtension-BAQVLtLC.js";import"./originUtils-D69mHv66.js";import"./resourceUtils-D1GRkF0Y.js";import"./resourceUtils-C3dQOEyf.js";import"./saveUtils-BbjSkQM1.js";var m;let a=m=class extends I{constructor(e){super(e),this.geometry=null,this.type="clip"}writeGeometry(e,t,r,o){var l;if((l=o.layer)!=null&&l.spatialReference&&!o.layer.spatialReference.equals(this.geometry.spatialReference)){if(!x(e.spatialReference,o.layer.spatialReference))return void((o==null?void 0:o.messages)&&o.messages.push(new L("scenemodification:unsupported","Scene modifications with incompatible spatial references are not supported",{modification:this,spatialReference:o.layer.spatialReference,context:o})));const d=new _;b(e,d,o.layer.spatialReference),t[r]=d.toJSON(o)}else t[r]=e.toJSON(o);delete t[r].spatialReference}clone(){return new m({geometry:N(this.geometry),type:this.type})}};i([n({type:_}),f()],a.prototype,"geometry",void 0),i([R(["web-scene","portal-item"],"geometry")],a.prototype,"writeGeometry",null),i([n({type:["clip","mask","replace"],nonNullable:!0}),f()],a.prototype,"type",void 0),a=m=i([h("esri.layers.support.SceneModification")],a);const u=a;var p;let y=p=class extends M(A.ofType(u)){constructor(e){super(e),this.url=null}clone(){return new p({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const r=new p;for(const o of e)r.add(u.fromJSON(o,t));return r}static async fromUrl(e,t,r){const o={url:J(e),origin:"service"},l=await V(e,{responseType:"json",signal:r==null?void 0:r.signal}),d=t.toJSON(),g=[];for(const v of l.data)g.push(u.fromJSON({...v,geometry:{...v.geometry,spatialReference:d}},o));return new p({url:e,items:g})}};i([n({type:String})],y.prototype,"url",void 0),y=p=i([h("esri.layers.support.SceneModifications")],y);const O=y;let s=class extends H($(j(D(E(P(U(K(C)))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null,this.definitionExpression=null}initialize(){this.addHandles(z(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,q))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,r){this._modificationsSource={url:G(e,r),context:r}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(r){k(r)}if(await this._fetchService(t),this._modificationsSource!=null){const r=await O.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(w.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(w.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new c("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new c("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new c("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";T(S.getLogger(this),Y(t,"absolute-height",e)),T(S.getLogger(this),ee(t,e))}};i([n({type:String,readOnly:!0})],s.prototype,"geometryType",void 0),i([n({type:["show","hide"]})],s.prototype,"listMode",void 0),i([n({type:["IntegratedMeshLayer"]})],s.prototype,"operationalLayerType",void 0),i([n({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),i([n({type:Q,readOnly:!0})],s.prototype,"nodePages",void 0),i([n({type:[W],readOnly:!0})],s.prototype,"materialDefinitions",void 0),i([n({type:[Z],readOnly:!0})],s.prototype,"textureSetDefinitions",void 0),i([n({type:[X],readOnly:!0})],s.prototype,"geometryDefinitions",void 0),i([n({readOnly:!0})],s.prototype,"serviceUpdateTimeStamp",void 0),i([n({type:O}),f({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],s.prototype,"modifications",void 0),i([B(["web-scene","portal-item"],"modifications")],s.prototype,"readModifications",null),i([n(F)],s.prototype,"elevationInfo",null),i([n({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],s.prototype,"path",void 0),s=i([h("esri.layers.IntegratedMeshLayer")],s);const ce=s;export{ce as default};
