import{el as H,jc as J,jd as X,r as t,t as r,be as G,fd as U,hO as b,je as k,x as F,a4 as P,hq as A,a7 as L,cE as B,jf as I,y as K,f$ as E,cF as Q,aX as q,eo as W,eq as Y,cP as Z,z as ee}from"./index-CorgkmYx.js";import{c as te,b as ie}from"./featureReferenceUtils-BqJdSwHK.js";import{c as re}from"./Analysis-B1CLc1e3.js";import"./sphere-BBWSjd6r.js";import"./mat3f64-q3fE-ZOt.js";import"./plane-BzYZw24a.js";import"./mat4f64-CSKppSlJ.js";import"./quatf64-aQ5IuZRd.js";import"./IntersectorInterfaces-dI_rFEZm.js";import"./boundedPlane-CCkaeyY_.js";import"./lineSegment-DZB-cCmC.js";let l=class extends H(J){constructor(e){super(e),this.observer=null,this.farDistance=1e3,this.heading=0,this.tilt=90,this.horizontalFieldOfView=45,this.verticalFieldOfView=45,this.feature=null}isValid(){return this.observer!=null&&this.farDistance>0}equals(e){return X(this.observer,e.observer)&&this.farDistance===e.farDistance&&this.heading===e.heading&&this.tilt===e.tilt&&this.horizontalFieldOfView===e.horizontalFieldOfView&&this.verticalFieldOfView===e.verticalFieldOfView&&te(this.feature,e.feature)}};t([r({type:G,json:{write:!0}})],l.prototype,"observer",void 0),t([r({type:Number,nonNullable:!0,range:{min:0},json:{write:{isRequired:!0}}})],l.prototype,"farDistance",void 0),t([r({type:Number,nonNullable:!0,json:{write:{isRequired:!0}}}),U(i=>b.normalize(k(i),void 0,!0))],l.prototype,"heading",void 0),t([r({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],l.prototype,"tilt",void 0),t([r({type:Number,nonNullable:!0,range:{min:0,max:360},json:{write:{isRequired:!0}}})],l.prototype,"horizontalFieldOfView",void 0),t([r({type:Number,nonNullable:!0,range:{min:0,max:180},json:{write:{isRequired:!0}}})],l.prototype,"verticalFieldOfView",void 0),t([r(ie)],l.prototype,"feature",void 0),t([r({json:{read:!1}})],l.prototype,"isValid",null),l=t([F("esri.analysis.Viewshed")],l);const T=l,R=L.ofType(T);let u=class extends re{constructor(e){super(e),this.type="viewshed",this._extent=null}initialize(){this.addHandles(P(()=>this._computeExtent(),e=>{e.pending==null&&(this._extent=e.extent)},A))}get viewsheds(){return this._get("viewsheds")||new R}set viewsheds(e){this._set("viewsheds",B(e,this.viewsheds,R))}get spatialReference(){for(const e of this.viewsheds)if(e.observer!=null)return e.observer.spatialReference;return null}get extent(){return this._extent}get requiredPropertiesForEditing(){return this.viewsheds.items.map(({observer:e})=>e)}async waitComputeExtent(){const e=this._computeExtent();e.pending!=null&&await e.pending}_computeExtent(){const{spatialReference:e}=this;if(e==null)return{pending:null,extent:null};const d=this.viewsheds.filter(s=>s.observer!=null),f=d.map(s=>s.observer).toArray(),a=I(f,e);return a.pending!=null?{pending:a.pending,extent:null}:{pending:null,extent:a.geometries.map((s,p)=>{const V=d.at(p);return s!=null&&V!=null?this._computeViewshedExtent(this.viewsheds.at(p),s):null}).filter(s=>s!=null).reduce((s,p)=>se(s,p),null)}}_computeViewshedExtent(e,d){const{farDistance:f,heading:a,tilt:s,horizontalFieldOfView:p,verticalFieldOfView:V}=e,{spatialReference:v}=d,O=p/2,$=V/2,j=f/v.metersPerUnit,S=[b.normalize(a-O),a,b.normalize(a+O)],h=K.fromPoint(d),g=m=>{const c=S.map(o=>b.normalize(o-m));if(c[0]>c[2]||p===360)return j;const y=c.map(o=>Math.abs(o>180?360-o:o)).reduce((o,x)=>o>x?x:o);return y>90?0:j*Math.cos(E(y))};h.xmax+=g(90),h.xmin-=g(-90),h.ymax+=g(0),h.ymin-=g(180);const w=d.z;if(w!=null){let m=w,c=w;const y=s-90,o=q(y+$,-90,90),x=q(y-$,-90,90),z=v!=null&&v.isGeographic?f:j;m+=z*N(o),c+=z*N(x);const C=M($)*z,_=N(y)*C*(1-M(O));s<90&&(m-=_),s>90&&(c-=_),h.zmax=Math.max(m,w),h.zmin=Math.min(c,w)}return h}clear(){this.viewsheds.removeAll()}};function se(i,e){return i==null?e:e==null?i:i.union(e)}function M(i){return Math.cos(E(i))}function N(i){return Math.sin(E(i))}t([r({type:["viewshed"]})],u.prototype,"type",void 0),t([r({cast:Q,type:R,nonNullable:!0})],u.prototype,"viewsheds",null),t([r({readOnly:!0})],u.prototype,"spatialReference",null),t([r()],u.prototype,"_extent",void 0),t([r({readOnly:!0})],u.prototype,"extent",null),t([r({readOnly:!0})],u.prototype,"requiredPropertiesForEditing",null),u=t([F("esri.analysis.ViewshedAnalysis")],u);const D=u;let n=class extends W(Y(Z)){constructor(i){super(i),this.type="viewshed",this.operationalLayerType="ViewshedLayer",this.source=new D,this.opacity=1}initialize(){this.addHandles(P(()=>this.source,(i,e)=>{e!=null&&e.parent===this&&(e.parent=null),i!=null&&(i.parent=this)},A))}async load(){return this.addResolvingPromise(this.source.waitComputeExtent()),this}get spatialReference(){return this.source.spatialReference}get fullExtent(){return this.source.extent}releaseAnalysis(i){this.source===i&&(this.source=new D)}get analysis(){return this.source}set analysis(i){this.source=i}get viewsheds(){return this.source.viewsheds}set viewsheds(i){this.source.viewsheds=i}writeViewsheds(i,e,d,f){e.viewsheds=i.filter(a=>a.isValid()).map(a=>a.toJSON(f)).toJSON()}};t([r({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),t([r({type:["ViewshedLayer"]})],n.prototype,"operationalLayerType",void 0),t([r({nonNullable:!0})],n.prototype,"source",void 0),t([r({readOnly:!0})],n.prototype,"spatialReference",null),t([r({readOnly:!0})],n.prototype,"fullExtent",null),t([r({readOnly:!0,json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],n.prototype,"opacity",void 0),t([r({type:["show","hide"]})],n.prototype,"listMode",void 0),t([r({type:L.ofType(T),json:{write:{ignoreOrigin:!0},origins:{"web-scene":{write:{ignoreOrigin:!0}}}}})],n.prototype,"viewsheds",null),t([ee("web-scene","viewsheds")],n.prototype,"writeViewsheds",null),n=t([F("esri.layers.ViewshedLayer")],n);const ve=n;export{ve as default};
