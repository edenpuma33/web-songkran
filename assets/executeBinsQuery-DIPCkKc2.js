import{I as m,bp as f,D as y,ah as c,eY as s,dL as S,a as l,A as p,a6 as R}from"./index-CorgkmYx.js";import{t as g}from"./query-fkZb4bFq.js";import d from"./BinsQuery-qJkUAZxr.js";import"./pbfQueryUtils-RHZKJNMG.js";import"./pbf-C4M-aU-3.js";import"./OptimizedFeature-D3320lj0.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./queryUtils-CwRl2kBy.js";import"./json-BLezgqVO.js";function J(r){const e=r.geometry,n=r.toJSON(),t=n;let o,a,i;return e!=null&&(a=e.spatialReference,i=s(a),t.geometryType=S(e),t.geometry=JSON.stringify(e),t.inSR=i),n.outSR?(t.outSR=s(n.outSR),o=r.outSpatialReference):e&&(t.outSR=t.inSR,o=a),t.bin&&(t.bin=JSON.stringify(t.bin)),t.quantizationParameters&&(t.quantizationParameters=JSON.stringify(t.quantizationParameters)),t.outStatistics&&(t.outStatistics=JSON.stringify(t.outStatistics)),t.outTimeReference&&(t.outTimeReference=JSON.stringify(t.outTimeReference)),r.defaultSpatialReference&&l(a,o)&&(t.defaultSR=t.inSR,delete t.inSR,delete t.outSR),t}async function N(r,e,n){return O(r,e,n)}async function O(r,e,n={}){const t=typeof r=="string"?m(r):r,o=e.geometry?[e.geometry]:[],a=await f(o,null,{signal:n.signal}),i=a==null?void 0:a[0];i!=null&&((e=e.clone()).geometry=i);const u=g({...t.query,f:"json",...J(e)});return y(c(t.path,"queryBins"),{...n,query:{...u,...n.query}})}async function P(r,e,n){const{data:t}=await N(p(r),d.from(e),n);return R.fromJSON(t)}export{P as executeBinsQuery};
