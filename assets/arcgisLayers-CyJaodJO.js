const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/GroupLayer-DftHCn2C.js","assets/index-CorgkmYx.js","assets/index-CxdEf2vt.css","assets/fetchService-DablJZai.js","assets/saveUtils-BbjSkQM1.js"])))=>i.map(i=>d[i]);
import{_ as C,G as _,s as v,cV as F,I as V,cW as $,cX as P}from"./index-CorgkmYx.js";import{s as N}from"./associatedFeatureServiceUtils-DsIe-ty2.js";import{b as f,i as S,t as J,a as k}from"./fetchService-DablJZai.js";const x={FeatureLayer:!0,SceneLayer:!0};async function W(a){const{properties:s,url:e}=a,t={...s,url:e},n=await M(e,s==null?void 0:s.customParameters),{Constructor:r,layerId:o,sourceJSON:u,parsedUrl:c,layers:y,tables:m}=n;if(y.length+m.length===0)return o!=null&&(t.layerId=o),u!=null&&(t.sourceJSON=u),new r(t);const p=new(await C(async()=>{const{default:w}=await import("./GroupLayer-DftHCn2C.js");return{default:w}},__vite__mapDeps([0,1,2,3,4]))).default({title:c.title});return await E(p,n,t),p}function O(a,s){return a?a.find(({id:e})=>e===s):null}function T(a,s,e,t,n){const r={...n,layerId:s};return a!=null&&(r.url=a),e!=null&&(r.sourceJSON=e),"sublayerTitleMode"in t.prototype&&(r.sublayerTitleMode="service-name"),new t(r)}async function E(a,s,e){const t=s.sublayerConstructorProvider;for(const{id:n,serverUrl:r}of s.layers){const o=O(s.sublayerInfos,n),u=T(r,n,o,(o&&(t==null?void 0:t(o)))??s.Constructor,e);a.add(u)}if(s.tables.length){const n=await b("FeatureLayer");s.tables.forEach(({id:r,serverUrl:o})=>{const u=T(o,r,O(s.tableInfos,r),n,e);a.tables.add(u)})}}async function M(a,s){var m,p,w,h,I,g,L;let e=_(a);if(e==null&&(e=await G(a,s)),e==null)throw new v("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:a});const{serverType:t,sublayer:n}=e;let r;const o={FeatureServer:"FeatureLayer",KnowledgeGraphServer:"KnowledgeGraphLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer",VideoServer:"VideoLayer"},u=t==="FeatureServer",c=t==="SceneServer",y={parsedUrl:e,Constructor:null,layerId:u||c?n??void 0:void 0,layers:[],tables:[]};switch(t){case"MapServer":if(n!=null){const{type:l}=await f(a,{customParameters:s});switch(r="FeatureLayer",l){case"Catalog Layer":r="CatalogLayer";break;case"Catalog Dynamic Group Layer":throw new v("arcgis-layers:unsupported",`fromUrl() not supported for "${l}" layers`)}}else r=await A(a,s)?"TileLayer":"MapImageLayer";break;case"ImageServer":{const l=await f(a,{customParameters:s}),{tileInfo:i,cacheType:d}=l;r=i?((m=i==null?void 0:i.format)==null?void 0:m.toUpperCase())!=="LERC"||d&&d.toLowerCase()!=="elevation"?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const l=await f(e.url.path,{customParameters:s});if(r="SceneLayer",l){const i=l==null?void 0:l.layers;if((l==null?void 0:l.layerType)==="Voxel")r="VoxelLayer";else if(i!=null&&i.length){const d=(p=i[0])==null?void 0:p.layerType;d!=null&&P[d]!=null&&(r=P[d])}}break}case"3DTilesServer":throw new v("arcgis-layers:unsupported","fromUrl() not supported for 3DTiles layers");case"FeatureServer":if(r="FeatureLayer",n!=null){const l=await f(a,{customParameters:s});y.sourceJSON=l,r=S(l.type)}break;default:r=o[t]}if(x[r]&&n==null){const l=await D(a,t,s);if(u&&(y.sublayerInfos=l.layerInfos,y.tableInfos=l.tableInfos),l.layers.length+l.tables.length!==1)y.layers=l.layers,y.tables=l.tables,u&&((w=l.layerInfos)!=null&&w.length)&&(y.sublayerConstructorProvider=await K(l.layerInfos));else if(u||c){const i=((h=l.layerInfos)==null?void 0:h[0])??((I=l.tableInfos)==null?void 0:I[0]);if(y.layerId=((g=l.layers[0])==null?void 0:g.id)??((L=l.tables[0])==null?void 0:L.id),y.sourceJSON=i,u){const d=i==null?void 0:i.type;r=S(d)}}}return y.Constructor=await b(r),y}async function G(a,s){var u;const e=await f(a,{customParameters:s});let t=null,n=null;const r=e.type;if(r==="Feature Layer"||r==="Table"?(t="FeatureServer",n=e.id??null):r==="indexedVector"?t="VectorTileServer":e.hasOwnProperty("mapName")?t="MapServer":e.hasOwnProperty("bandCount")&&e.hasOwnProperty("pixelSizeX")?t="ImageServer":e.hasOwnProperty("maxRecordCount")&&e.hasOwnProperty("allowGeometryUpdates")?t="FeatureServer":e.hasOwnProperty("streamUrls")?t="StreamServer":U(e)?(t="SceneServer",n=e.id):e.hasOwnProperty("layers")&&U((u=e.layers)==null?void 0:u[0])&&(t="SceneServer"),!t)return null;const o=n!=null?F(a):null;return{title:o!=null&&e.name||$(a),serverType:t,sublayer:n,url:{path:o!=null?o.serviceUrl:V(a).path}}}function U(a){return a!=null&&a.hasOwnProperty("store")&&a.hasOwnProperty("id")&&typeof a.id=="number"}async function D(a,s,e){let t,n,r=!1;switch(s){case"FeatureServer":{const c=await J(a,{customParameters:e});r=!!c.layersJSON,t=c.layersJSON||c.serviceJSON;break}case"SceneServer":{const c=await R(a,e);t=c.serviceInfo,n=c.tableServerUrl;break}default:t=await f(a,{customParameters:e})}const o=t==null?void 0:t.layers,u=t==null?void 0:t.tables;return{layers:(o==null?void 0:o.map(c=>({id:c.id})).reverse())||[],tables:(u==null?void 0:u.map(c=>({serverUrl:n,id:c.id})).reverse())||[],layerInfos:r?o:[],tableInfos:r?u:[]}}async function R(a,s){var n;const e=await f(a,{customParameters:s});if(!((n=e.layers)==null?void 0:n[0]))return{serviceInfo:e};try{const{serverUrl:r}=await N(a),o=await f(r,{customParameters:s}).catch(()=>null);return o&&(e.tables=o.tables),{serviceInfo:e,tableServerUrl:r}}catch{return{serviceInfo:e}}}async function b(a){return(0,k[a])()}async function A(a,s){return(await f(a,{customParameters:s})).tileInfo}async function K(a){if(!a.length)return;const s=new Set,e=[];for(const{type:r}of a)s.has(r)||(s.add(r),e.push(b(S(r))));const t=await Promise.all(e),n=new Map;return Array.from(s).forEach((r,o)=>{n.set(r,t[o])}),r=>n.get(r.type)}export{W as fromUrl};
