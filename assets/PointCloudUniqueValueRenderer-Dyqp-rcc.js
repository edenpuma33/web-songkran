import{r as e,t,x as n,l as h,dp as P,dq as m,bk as r,lr as k,f1 as I,c3 as N,l_ as v,l$ as D}from"./index-CorgkmYx.js";var g;let c=g=class extends h{constructor(){super(...arguments),this.field=null,this.minValue=0,this.maxValue=255}clone(){return new g({field:this.field,minValue:this.minValue,maxValue:this.maxValue})}};e([t({type:String,json:{write:!0}})],c.prototype,"field",void 0),e([t({type:Number,nonNullable:!0,json:{write:!0}})],c.prototype,"minValue",void 0),e([t({type:Number,nonNullable:!0,json:{write:!0}})],c.prototype,"maxValue",void 0),c=g=e([n("esri.renderers.support.pointCloud.ColorModulation")],c);const K=c,T=new P({pointCloudFixedSizeAlgorithm:"fixed-size",pointCloudSplatAlgorithm:"splat"});let b=class extends h{};e([t({type:T.apiValues,readOnly:!0,nonNullable:!0,json:{type:T.jsonValues,read:!1,write:T.write}})],b.prototype,"type",void 0),b=e([n("esri.renderers.support.pointCloud.PointSizeAlgorithm")],b);const R=b;var V;let f=V=class extends R{constructor(){super(...arguments),this.type="fixed-size",this.size=0,this.useRealWorldSymbolSizes=null}clone(){return new V({size:this.size,useRealWorldSymbolSizes:this.useRealWorldSymbolSizes})}};e([m({pointCloudFixedSizeAlgorithm:"fixed-size"})],f.prototype,"type",void 0),e([t({type:Number,nonNullable:!0,json:{write:!0}})],f.prototype,"size",void 0),e([t({type:Boolean,json:{write:!0}})],f.prototype,"useRealWorldSymbolSizes",void 0),f=V=e([n("esri.renderers.support.pointCloud.PointSizeFixedSizeAlgorithm")],f);const q=f;var j;let y=j=class extends R{constructor(){super(...arguments),this.type="splat",this.scaleFactor=1}clone(){return new j({scaleFactor:this.scaleFactor})}};e([m({pointCloudSplatAlgorithm:"splat"})],y.prototype,"type",void 0),e([t({type:Number,value:1,nonNullable:!0,json:{write:!0}})],y.prototype,"scaleFactor",void 0),y=j=e([n("esri.renderers.support.pointCloud.PointSizeSplatAlgorithm")],y);const B=y,A={key:"type",base:R,typeMap:{"fixed-size":q,splat:B}},w=k()({pointCloudClassBreaksRenderer:"point-cloud-class-breaks",pointCloudRGBRenderer:"point-cloud-rgb",pointCloudStretchRenderer:"point-cloud-stretch",pointCloudUniqueValueRenderer:"point-cloud-unique-value"});let s=class extends h{constructor(O){super(O),this.type=void 0,this.pointSizeAlgorithm=null,this.colorModulation=null,this.pointsPerInch=10}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}cloneProperties(){return{pointSizeAlgorithm:r(this.pointSizeAlgorithm),colorModulation:r(this.colorModulation),pointsPerInch:r(this.pointsPerInch)}}};e([t({type:w.apiValues,readOnly:!0,nonNullable:!0,json:{type:w.jsonValues,read:!1,write:w.write}})],s.prototype,"type",void 0),e([t({types:A,json:{write:!0}})],s.prototype,"pointSizeAlgorithm",void 0),e([t({type:K,json:{write:!0}})],s.prototype,"colorModulation",void 0),e([t({json:{write:!0},nonNullable:!0,type:Number})],s.prototype,"pointsPerInch",void 0),s=e([n("esri.renderers.PointCloudRenderer")],s),function(i){i.fieldTransformTypeKebabDict=new P({none:"none",lowFourBit:"low-four-bit",highFourBit:"high-four-bit",absoluteValue:"absolute-value",moduloTen:"modulo-ten"})}(s||(s={}));const o=s;var C;let l=C=class extends h{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new C({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:r(this.color)})}};e([t({type:String,json:{write:!0}})],l.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],l.prototype,"label",void 0),e([t({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue"}}})],l.prototype,"minValue",void 0),e([t({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue"}}})],l.prototype,"maxValue",void 0),e([t({type:N,json:{type:[I],write:!0}})],l.prototype,"color",void 0),l=C=e([n("esri.renderers.support.pointCloud.ColorClassBreakInfo")],l);const M=l;var S;let u=S=class extends o{constructor(i){super(i),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new S({...this.cloneProperties(),field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:r(this.colorClassBreakInfos),legendOptions:r(this.legendOptions)})}};e([m({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],u.prototype,"type",void 0),e([t({json:{write:!0},type:String})],u.prototype,"field",void 0),e([t({type:v,json:{write:!0}})],u.prototype,"legendOptions",void 0),e([t({type:o.fieldTransformTypeKebabDict.apiValues,json:{type:o.fieldTransformTypeKebabDict.jsonValues,read:o.fieldTransformTypeKebabDict.read,write:o.fieldTransformTypeKebabDict.write}})],u.prototype,"fieldTransformType",void 0),e([t({type:[M],json:{write:!0}})],u.prototype,"colorClassBreakInfos",void 0),u=S=e([n("esri.renderers.PointCloudClassBreaksRenderer")],u);const _=u;var $;let p=$=class extends o{constructor(i){super(i),this.type="point-cloud-stretch",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.stops=null}clone(){return new $({...this.cloneProperties(),field:r(this.field),fieldTransformType:r(this.fieldTransformType),stops:r(this.stops),legendOptions:r(this.legendOptions)})}};e([m({pointCloudStretchRenderer:"point-cloud-stretch"})],p.prototype,"type",void 0),e([t({json:{write:!0},type:String})],p.prototype,"field",void 0),e([t({type:v,json:{write:!0}})],p.prototype,"legendOptions",void 0),e([t({type:o.fieldTransformTypeKebabDict.apiValues,json:{type:o.fieldTransformTypeKebabDict.jsonValues,read:o.fieldTransformTypeKebabDict.read,write:o.fieldTransformTypeKebabDict.write}})],p.prototype,"fieldTransformType",void 0),e([t({type:[D],json:{write:!0}})],p.prototype,"stops",void 0),p=$=e([n("esri.renderers.PointCloudStretchRenderer")],p);const E=p;var x;let d=x=class extends h{constructor(){super(...arguments),this.description=null,this.label=null,this.values=null,this.color=null}clone(){return new x({description:this.description,label:this.label,values:r(this.values),color:r(this.color)})}};e([t({type:String,json:{write:!0}})],d.prototype,"description",void 0),e([t({type:String,json:{write:!0}})],d.prototype,"label",void 0),e([t({type:[String],json:{write:!0}})],d.prototype,"values",void 0),e([t({type:N,json:{type:[I],write:!0}})],d.prototype,"color",void 0),d=x=e([n("esri.renderers.support.pointCloud.ColorUniqueValueInfo")],d);const F=d;var z;let a=z=class extends o{constructor(i){super(i),this.type="point-cloud-unique-value",this.field=null,this.fieldTransformType=null,this.colorUniqueValueInfos=null,this.legendOptions=null}clone(){return new z({...this.cloneProperties(),field:r(this.field),fieldTransformType:r(this.fieldTransformType),colorUniqueValueInfos:r(this.colorUniqueValueInfos),legendOptions:r(this.legendOptions)})}};e([m({pointCloudUniqueValueRenderer:"point-cloud-unique-value"})],a.prototype,"type",void 0),e([t({json:{write:!0},type:String})],a.prototype,"field",void 0),e([t({type:o.fieldTransformTypeKebabDict.apiValues,json:{type:o.fieldTransformTypeKebabDict.jsonValues,read:o.fieldTransformTypeKebabDict.read,write:o.fieldTransformTypeKebabDict.write}})],a.prototype,"fieldTransformType",void 0),e([t({type:[F],json:{write:!0}})],a.prototype,"colorUniqueValueInfos",void 0),e([t({type:v,json:{write:!0}})],a.prototype,"legendOptions",void 0),a=z=e([n("esri.renderers.PointCloudUniqueValueRenderer")],a);const H=a;export{H as a,E as b,o as c,_ as d};
