import{fS as U,fs as k,a6 as J,y as T,s as W,e8 as h,ag as X,fl as Y,b5 as D,a3 as H,b$ as L,r as t,t as i,x as P,h6 as Q,eA as G,h7 as V,h8 as z,cN as A,eX as Z,en as B,cO as M,eo as K,ep as ee,eq as te,g as j,h9 as R,ha as re,c1 as $,f8 as ie,I as ne,hb as se,bl as f,cP as ae,f0 as oe,eG as le,z as ue,hd as de,he as pe,hf as ye,hg as fe,es as ce,f1 as m,hF as me,hi as he,a8 as ge,hj as we,hk as Fe,hl as xe,ey as be}from"./index-CorgkmYx.js";import{y as Oe,u as Se}from"./clientSideDefaults-DMrvHvE0.js";import{v as Ie,W as Re,z as Ce,Y as Te,S as Pe}from"./wfsUtils-DRbZ8mKh.js";import"./QueryEngineCapabilities-DjYb9CEb.js";import"./capabilities-D6exRNM4.js";import"./geojson-BLODqhp1.js";import"./date-Ctp1FiBW.js";import"./OptimizedFeature-D3320lj0.js";import"./xmlUtils-CtUoQO7q.js";let d=class extends U{constructor(){super(...arguments),this._connection=null,this._workerHandler=null,this.capabilities=Oe(!1,!1),this.type="wfs",this.refresh=k(async()=>{await this.load();const e={customParameters:this.layer.customParameters,maxRecordCount:this.layer.maxRecordCount,maxTotalRecordCount:this.layer.maxTotalRecordCount,maxPageCount:this.layer.maxPageCount},{extent:r}=await this._workerHandler.refresh(e);return r&&(this.sourceJSON.extent=r),{dataChanged:!0,updates:{extent:this.sourceJSON.extent}}})}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:r})),Promise.resolve(this)}destroy(){var e;(e=this._connection)==null||e.close(),this._connection=null,this._workerHandler=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(e,r={}){const s=await this.queryFeaturesJSON(e,r);return J.fromJSON(s)}async queryFeaturesJSON(e,r={}){return await this.load(r),this._workerHandler.queryFeatures(e?e.toJSON():void 0,r)}async queryFeatureCount(e,r={}){return await this.load(r),this._workerHandler.queryFeatureCount(e?e.toJSON():void 0,r)}async queryObjectIds(e,r={}){return await this.load(r),this._workerHandler.queryObjectIds(e?e.toJSON():void 0,r)}async queryExtent(e,r={}){await this.load(r);const s=await this._workerHandler.queryExtent(e?e.toJSON():void 0,r);return{count:s.count,extent:T.fromJSON(s.extent)}}async querySnapping(e,r={}){return await this.load(r),this._workerHandler.querySnapping(e,r)}async _createLoadOptions(e){var S,I;const{url:r,customParameters:s,name:o,namespaceUri:l,fields:a,geometryType:p,maxRecordCount:y,maxPageCount:g,maxTotalRecordCount:w,swapXY:F}=this.layer,c=this.layer.originOf("spatialReference")==="defaults"?void 0:this.layer.spatialReference;if(!r)throw new W("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await Ie(r,{customParameters:s,...e}));const q=["fields","geometryType","name","namespaceUri","swapXY"].some(x=>this.layer[x]==null),u=q?await Re(this.wfsCapabilities,o,l,{spatialReference:c,customParameters:s,signal:e==null?void 0:e.signal}):{...Ce(a??[]),geometryType:p,name:o,namespaceUri:l,spatialReference:c,swapXY:F},v=Te(this.wfsCapabilities.readFeatureTypes(),u.name,u.namespaceUri),N=h.toJSON(u.geometryType),{operations:O}=this.wfsCapabilities,_=O.GetFeature.url,E=O.GetFeature.outputFormat;return{customParameters:s,featureType:v,fields:((S=u.fields)==null?void 0:S.map(x=>x.toJSON()))??[],geometryField:u.geometryField,geometryType:N,getFeatureUrl:_,getFeatureOutputFormat:E,maxRecordCount:y,maxPageCount:g,maxTotalRecordCount:w,objectIdField:u.objectIdField,spatialReference:(I=u.spatialReference)==null?void 0:I.toJSON(),swapXY:!!u.swapXY}}async _startWorker(e){const[r,s]=await X([this._createLoadOptions(e),Y("WFSSourceWorker",{...e,strategy:D("feature-layers-workers")?"dedicated":"local",registryTarget:this})]),o=r.error||s.error||null,l=s.value||null;if(o)throw l&&l.close(),o;const a=r.value;this._connection=s.value,this._workerHandler=this._connection.createInvokeProxy();const p=await this._workerHandler.load(a,e);for(const y of p.warnings)H.getLogger(this.layer).warn("#load()",`${y.message} (title: '${this.layer.title||"no title"}', id: '${this.layer.id??"no id"}')`,{warning:y});this.sourceJSON={dateFieldsTimeReference:{timeZoneIANA:L},extent:p.extent,fields:a.fields,geometryType:a.geometryType,objectIdField:a.objectIdField,geometryField:a.geometryField,drawingInfo:Se(a.geometryType),name:a.featureType.title,wfsInfo:{name:a.featureType.name,featureUrl:a.getFeatureUrl,maxFeatures:a.maxRecordCount,swapXY:a.swapXY,supportedSpatialReferences:a.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:a.featureType.namespaceUri}}}};t([i()],d.prototype,"capabilities",void 0),t([i({constructOnly:!0})],d.prototype,"layer",void 0),t([i()],d.prototype,"sourceJSON",void 0),t([i()],d.prototype,"type",void 0),t([i()],d.prototype,"wfsCapabilities",void 0),d=t([P("esri.layers.graphics.sources.WFSSource")],d);var b;const C=de();let n=b=class extends Q(G(V(z(A(Z(B(M(K(ee(te(ae))))))))))){static fromWFSLayerInfo(e){const{customParameters:r,fields:s,geometryField:o,geometryType:l,name:a,namespaceUri:p,objectIdField:y,spatialReference:g,swapXY:w,url:F,wfsCapabilities:c}=e;return new b({customParameters:r,fields:s,geometryField:o,geometryType:l,name:a,namespaceUri:p,objectIdField:y,spatialReference:g,swapXY:w,url:F,wfsCapabilities:c})}constructor(e){super(e),this.copyright=null,this.customParameters=null,this.dateFieldsTimeZone=null,this.definitionExpression=null,this.displayField=null,this.elevationInfo=null,this.featureUrl=void 0,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="WFS",this.maxRecordCount=3e3,this.maxPageCount=10,this.maxTotalRecordCount=2e5,this.mode=0,this.name=null,this.namespaceUri=null,this.outFields=null,this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new d({layer:this}),this.spatialReference=j.WGS84,this.spatialReferences=[4326],this.swapXY=void 0,this.title="WFS",this.type="wfs",this.url=null,this.version=void 0}destroy(){var e;(e=this.source)==null||e.destroy()}load(e){return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WFS"]},e).then(()=>this.source.load(e)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo","spatialReference","name","namespaceUri"],"service"),R(this.renderer,this.fieldsIndex),re(this.timeInfo,this.fieldsIndex)})),Promise.resolve(this)}get capabilities(){var e;return(e=this.source)==null?void 0:e.capabilities}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}writeFields(e,r,s){const o=e.filter(l=>l.name!==Pe);this.geometryField&&o.unshift(new $({name:this.geometryField,alias:this.geometryField,type:"geometry"})),ie(s,o.map(l=>l.toJSON()),r)}get parsedUrl(){return ne(this.url)}set renderer(e){R(e,this.fieldsIndex),this._set("renderer",e)}get wfsCapabilities(){var e;return(e=this.source)==null?void 0:e.wfsCapabilities}set wfsCapabilities(e){this.source&&(this.source.wfsCapabilities=e)}createPopupTemplate(e){return se(this,e)}createQuery(){const e=new f({returnGeometry:!0,outFields:["*"],where:this.definitionExpression||"1=1"}),{timeOffset:r,timeExtent:s}=this;return e.timeExtent=r!=null&&s!=null?s.offset(-r.value,r.unit):s||null,e}getFieldDomain(e,r){var s;return(s=this.getField(e))==null?void 0:s.domain}getField(e){var r;return(r=this.fieldsIndex)==null?void 0:r.get(e)}queryFeatures(e,r){return this.load().then(()=>this.source.queryFeatures(f.from(e)||this.createQuery(),r)).then(s=>{if(s!=null&&s.features)for(const o of s.features)o.layer=o.sourceLayer=this;return s})}queryObjectIds(e,r){return this.load().then(()=>this.source.queryObjectIds(f.from(e)||this.createQuery(),r))}queryFeatureCount(e,r){return this.load().then(()=>this.source.queryFeatureCount(f.from(e)||this.createQuery(),r))}queryExtent(e,r){return this.load().then(()=>this.source.queryExtent(f.from(e)||this.createQuery(),r))}async hasDataChanged(){try{const{dataChanged:e,updates:r}=await this.source.refresh();return r!=null&&this.read(r,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),e}catch{}return!1}};t([i({readOnly:!0})],n.prototype,"capabilities",null),t([i({type:String})],n.prototype,"copyright",void 0),t([i({readOnly:!0})],n.prototype,"createQueryVersion",null),t([i({json:{name:"wfsInfo.customParameters",write:{overridePolicy:e=>({enabled:!!(e&&Object.keys(e).length>0),ignoreOrigin:!0})}}})],n.prototype,"customParameters",void 0),t([i(oe("dateFieldsTimeReference"))],n.prototype,"dateFieldsTimeZone",void 0),t([i({readOnly:!0})],n.prototype,"defaultPopupTemplate",null),t([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],n.prototype,"definitionExpression",void 0),t([i({type:String})],n.prototype,"displayField",void 0),t([i(le)],n.prototype,"elevationInfo",void 0),t([i({type:String,readOnly:!0,json:{name:"wfsInfo.featureUrl",write:{ignoreOrigin:!0,isRequired:!0}}})],n.prototype,"featureUrl",void 0),t([i({type:[$],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],n.prototype,"fields",void 0),t([ue("fields")],n.prototype,"writeFields",null),t([i(C.fieldsIndex)],n.prototype,"fieldsIndex",void 0),t([i({type:T,json:{name:"extent"}})],n.prototype,"fullExtent",void 0),t([i()],n.prototype,"geometryField",void 0),t([i({type:String,json:{read:{source:"layerDefinition.geometryType",reader:h.read},write:{target:"layerDefinition.geometryType",writer:h.write,ignoreOrigin:!0},origins:{service:{read:h.read}}}})],n.prototype,"geometryType",void 0),t([i({type:String})],n.prototype,"id",void 0),t([i(pe)],n.prototype,"labelsVisible",void 0),t([i({type:[fe],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:ye},write:!0}})],n.prototype,"labelingInfo",void 0),t([i(ce)],n.prototype,"legendEnabled",void 0),t([i({type:["show","hide"]})],n.prototype,"listMode",void 0),t([i({type:String})],n.prototype,"objectIdField",void 0),t([i({type:["WFS"]})],n.prototype,"operationalLayerType",void 0),t([i({type:m,json:{name:"wfsInfo.maxFeatures",write:{ignoreOrigin:!0,isRequired:!0}}})],n.prototype,"maxRecordCount",void 0),t([i({type:m})],n.prototype,"maxPageCount",void 0),t([i({type:m})],n.prototype,"maxTotalRecordCount",void 0),t([i({type:[0],readOnly:!0,json:{origins:{"web-map":{write:{ignoreOrigin:!0,isRequired:!0}}}}})],n.prototype,"mode",void 0),t([i({type:String,json:{name:"wfsInfo.name",write:{ignoreOrigin:!0,isRequired:!0}}})],n.prototype,"name",void 0),t([i({type:String,json:{name:"wfsInfo.wfsNamespace",write:{ignoreOrigin:!0,isRequired:!0}}})],n.prototype,"namespaceUri",void 0),t([i(me)],n.prototype,"opacity",void 0),t([i(C.outFields)],n.prototype,"outFields",void 0),t([i({readOnly:!0})],n.prototype,"parsedUrl",null),t([i(he)],n.prototype,"popupEnabled",void 0),t([i({type:ge,json:{name:"popupInfo",write:!0}})],n.prototype,"popupTemplate",void 0),t([i({types:Fe,json:{origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:we,name:"layerDefinition.drawingInfo.renderer",write:!0}},name:"layerDefinition.drawingInfo.renderer",write:{ignoreOrigin:!0}}})],n.prototype,"renderer",null),t([i(xe)],n.prototype,"screenSizePerspectiveEnabled",void 0),t([i({readOnly:!0})],n.prototype,"source",void 0),t([i({type:j,json:{name:"layerDefinition.spatialReference",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"extent.spatialReference"}}}})],n.prototype,"spatialReference",void 0),t([i({readOnly:!0,type:[m],json:{name:"wfsInfo.supportedSpatialReferences",write:{ignoreOrigin:!0,isRequired:!0}}})],n.prototype,"spatialReferences",void 0),t([i({type:Boolean,value:!1,json:{name:"wfsInfo.swapXY",write:{ignoreOrigin:!0,isRequired:!0}}})],n.prototype,"swapXY",void 0),t([i({json:{write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"name"}}}})],n.prototype,"title",void 0),t([i({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),t([i(be)],n.prototype,"url",void 0),t([i({type:String,readOnly:!0,json:{name:"wfsInfo.version",write:{ignoreOrigin:!0,isRequired:!0}}})],n.prototype,"version",void 0),t([i()],n.prototype,"wfsCapabilities",null),n=b=t([P("esri.layers.WFSLayer")],n);const Je=n;export{Je as default};
