import{l as h,r as e,t,x as s,be as G,R as f,cG as w}from"./index-CorgkmYx.js";let a=class extends h{constructor(o){super(o),this.properties=null}};e([t({json:{write:!0}})],a.prototype,"properties",void 0),a=e([s("esri.rest.knowledgeGraph.GraphObject")],a);const y=a;let i=class extends y{constructor(o){super(o),this.typeName=null,this.id=null}};e([t({type:String,json:{write:!0}})],i.prototype,"typeName",void 0),e([t({type:String,json:{write:!0}})],i.prototype,"id",void 0),i=e([s("esri.rest.knowledgeGraph.GraphNamedObject")],i);const m=i;let u=class extends m{constructor(o){super(o),this.layoutGeometry=null}};e([t({type:G,json:{write:!0}})],u.prototype,"layoutGeometry",void 0),u=e([s("esri.rest.knowledgeGraph.Entity")],u);const k=u;let p=class extends m{constructor(r){super(r),this.originId=null,this.destinationId=null,this.layoutGeometry=null}};e([t({type:String,json:{write:!0}})],p.prototype,"originId",void 0),e([t({type:String,json:{write:!0}})],p.prototype,"destinationId",void 0),e([t({type:f,json:{write:!0}})],p.prototype,"layoutGeometry",void 0),p=e([s("esri.rest.knowledgeGraph.Relationship")],p);const Q=p;let c=class extends y{constructor(r){super(r)}};c=e([s("esri.rest.knowledgeGraph.ObjectValue")],c);const P=c;let l=class extends h{constructor(o){super(o),this.path=null}};e([t({type:[y],json:{write:!0}})],l.prototype,"path",void 0),l=e([s("esri.rest.knowledgeGraph.Path")],l);const v=l;let d=class extends w{constructor(r){super(r),this.openCypherQuery=""}};e([t()],d.prototype,"openCypherQuery",void 0),d=e([s("esri.rest.knowledgeGraph.GraphQuery")],d);const g=d;let n=class extends g{constructor(r){super(r),this.bindParameters=null,this.bindGeometryQuantizationParameters=null,this.outputQuantizationParameters=null,this.outputSpatialReference=null,this.provenanceBehavior=null}};e([t()],n.prototype,"bindParameters",void 0),e([t()],n.prototype,"bindGeometryQuantizationParameters",void 0),e([t()],n.prototype,"outputQuantizationParameters",void 0),e([t()],n.prototype,"outputSpatialReference",void 0),e([t()],n.prototype,"provenanceBehavior",void 0),n=e([s("esri.rest.knowledgeGraph.GraphQueryStreaming")],n);const z=n;export{v as c,k as m,Q as p,z as s,P as t};
