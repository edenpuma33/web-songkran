import{cN as w,eX as O,cO as T,ez as P,eo as E,ep as L,eq as M,en as F,eB as R,eA as _,bc as N,eM as x,ce as f,eY as j,D as g,eZ as q,y as J,e_ as U,e$ as A,s as S,a1 as V,cP as k,r as a,t as o,f0 as I,Q as z,z as Z,ey as B,x as D,f1 as C}from"./index-CorgkmYx.js";import{i as G}from"./scaleUtils-DsW0bhXV.js";import{m as H,f as K,t as W}from"./SublayersOwner-DMCAO0eS.js";import{y as Q}from"./ExportImageParameters-x1rb-a9Z.js";import{t as X}from"./imageBitmapUtils-DgfBAxnP.js";import{e as v}from"./sublayerUtils-ZMSUm0Ou.js";import"./QueryTask-C5hWF969.js";import"./infoFor3D-CxdEiWhp.js";import"./executeForIds-BRsfqoki.js";import"./query-fkZb4bFq.js";import"./pbfQueryUtils-RHZKJNMG.js";import"./pbf-C4M-aU-3.js";import"./OptimizedFeature-D3320lj0.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./executeQueryJSON-B6U6tpXU.js";import"./featureConversionUtils-CW0ryXfc.js";import"./floorFilterUtils-DZ5C6FQv.js";let s=class extends w(O(T(H(K(P(E(L(M(F(R(_(k)))))))))))){constructor(...e){super(...e),this._exportImageParameters=new Q({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,r){return typeof e=="string"?{url:e,...r}:e}load(e){const r=e!=null?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(N).then(()=>this._fetchService(r))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,r){const p=r.supportedImageFormatTypes;return p&&p.includes("PNG32")?"png32":"png24"}writeSublayers(e,r,p,t){var m,c,b;if(!this.loaded||!e)return;const i=e.slice().reverse().flatten(({sublayers:l})=>l&&l.toArray().reverse()).toArray();let n=!1;const u=x(t.origin);if((m=this.capabilities)!=null&&m.operations.supportsExportMap&&((b=(c=this.capabilities)==null?void 0:c.exportMap)!=null&&b.supportsDynamicLayers)){if(u===f.PORTAL_ITEM){const l=this.createSublayersForOrigin("service").sublayers;n=v(i,l,f.SERVICE)}else if(u>f.PORTAL_ITEM){const l=this.createSublayersForOrigin("portal-item");n=v(i,l.sublayers,x(l.origin))}}const h=[],y={writeSublayerStructure:n,...t};let d=n||this.hasVisibleLayersForOrigin(u);i.forEach(l=>{const $=l.write({},y);h.push($),d=d||l.originOf("visible")==="user"}),h.some(l=>Object.keys(l).length>1)&&(r.layers=h),d&&(r.visibleLayers=i.filter(l=>l.visible).map(l=>l.id))}createExportImageParameters(e,r,p,t){const i=(t==null?void 0:t.pixelRatio)||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=(t==null?void 0:t.floors)??null,this._exportImageParameters.scale=G({extent:e,width:r})*i;const n=this._exportImageParameters.toJSON(),u=!(t!=null&&t.rotation)||this.version<10.3?{}:{rotation:-t.rotation},h=e==null?void 0:e.spatialReference,y=j(h);n.dpi*=i;const d={};if(t!=null&&t.timeExtent){const{start:m,end:c}=t.timeExtent.toJSON();d.time=m&&c&&m===c?""+m:`${m??"null"},${c??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(d.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:y,imageSR:y,size:r+","+p,...n,...u,...d}}async fetchImage(e,r,p,t){const{data:i}=await this._fetchImage("image",e,r,p,t);return i}async fetchImageBitmap(e,r,p,t){const{data:i,url:n}=await this._fetchImage("blob",e,r,p,t);return X(i,n,t==null?void 0:t.signal)}async fetchRecomputedExtents(e={}){const r={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:p}=await g(this.url,r),{extent:t,fullExtent:i,timeExtent:n}=p,u=t||i;return{fullExtent:u&&J.fromJSON(u),timeExtent:n&&q.fromJSON({start:n[0],end:n[1]})}}loadAll(){return U(this,e=>{e(this.allSublayers),e(this.subtables)})}serviceSupportsSpatialReference(e){return A(this,e)}async _fetchImage(e,r,p,t,i){var h,y,d;const n={responseType:e,signal:(i==null?void 0:i.signal)??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(r,p,t,i),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},u=this.parsedUrl.path+"/export";if(((h=n.query)==null?void 0:h.dynamicLayers)!=null&&!((d=(y=this.capabilities)==null?void 0:y.exportMap)!=null&&d.supportsDynamicLayers))throw new S("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query});try{const{data:m}=await g(u,n);return{data:m,url:u}}catch(m){throw V(m)?m:new S("mapimagelayer:image-fetch-error",`Unable to load image: ${u}`,{error:m})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:r,ssl:p}=await g(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});p&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r,this.read(r,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){var r;return!(e==null||!((r=this.sublayersSourceJSON[e])!=null&&r.visibleLayers))}};a([o(I("dateFieldsTimeReference"))],s.prototype,"dateFieldsTimeZone",void 0),a([o({type:Boolean})],s.prototype,"datesInUnknownTimezone",void 0),a([o()],s.prototype,"dpi",void 0),a([o()],s.prototype,"gdbVersion",void 0),a([o()],s.prototype,"imageFormat",void 0),a([z("imageFormat",["supportedImageFormatTypes"])],s.prototype,"readImageFormat",null),a([o({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],s.prototype,"imageMaxHeight",void 0),a([o({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],s.prototype,"imageMaxWidth",void 0),a([o()],s.prototype,"imageTransparency",void 0),a([o({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],s.prototype,"isReference",void 0),a([o({json:{read:!1,write:!1}})],s.prototype,"labelsVisible",void 0),a([o({type:["ArcGISMapServiceLayer"]})],s.prototype,"operationalLayerType",void 0),a([o({json:{read:!1,write:!1}})],s.prototype,"popupEnabled",void 0),a([o(I("preferredTimeReference"))],s.prototype,"preferredTimeZone",void 0),a([o()],s.prototype,"sourceJSON",void 0),a([o({json:{write:{ignoreOrigin:!0}}})],s.prototype,"sublayers",void 0),a([Z("sublayers",{layers:{type:[W]},visibleLayers:{type:[C]}})],s.prototype,"writeSublayers",null),a([o({type:["show","hide","hide-children"]})],s.prototype,"listMode",void 0),a([o({json:{read:!1},readOnly:!0,value:"map-image"})],s.prototype,"type",void 0),a([o(B)],s.prototype,"url",void 0),s=a([D("esri.layers.MapImageLayer")],s);const fe=s;export{fe as default};
