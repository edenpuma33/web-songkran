const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/editingSupport-C5jn2YP9.js","assets/index-CorgkmYx.js","assets/index-CxdEf2vt.css","assets/infoFor3D-CxdEiWhp.js"])))=>i.map(i=>d[i]);
import{r as s,t as a,jb as G,eZ as V,l5 as re,x as I,ha as Q,l as q,el as se,a7 as N,aW as P,ci as ie,e0 as k,iE as ae,Q as w,c9 as ne,eU as oe,d5 as le,D as X,bk as de,s as u,ah as pe,_ as Y,iy as ue,ez as ce,eo as ye,ep as fe,cO as he,eq as me,eA as ge,eB as we,cS as be,ab as Ie,dG as ve,i_ as Le,h9 as z,a3 as m,bc as Fe,cZ as Se,bl as _e,l6 as Te,ac as $e,hb as Oe,fc as K,l7 as Ee,be as xe,ht as J,ce as R,a1 as je,w as Ae,cP as Pe,l8 as Re,l9 as De,hd as Ue,iM as qe,eG as Ne,he as Ce,hf as M,hg as Ge,es as Ve,la as Qe,hj as ke,hi as ze,a8 as Ke,hl as Je,lb as Me}from"./index-CorgkmYx.js";import{$ as We}from"./Mesh-Cdpkv-Ll.js";import{i as He,m as Ze,a as Be}from"./meshSpatialReferenceScaleUtils-DL4eB-W2.js";import{R as Xe,V as W}from"./SceneService-D_nqHM9F.js";import{s as Ye}from"./associatedFeatureServiceUtils-DsIe-ty2.js";import{t as et}from"./capabilities-D6exRNM4.js";import{p as ee,a as tt,y as rt,m as st}from"./I3SLayerDefinitions-CCgdW8Ea.js";import{r as it,n as at}from"./infoFor3D-CxdEiWhp.js";import{a as nt}from"./fetchService-DablJZai.js";import{j as ot}from"./persistable-DEHQmbOx.js";import{$ as H,P as lt,w as dt}from"./elevationInfoUtils-D8HWlcTj.js";import{V as pt}from"./I3SUtil-DlkE-9Qy.js";import{n as ut,p as ct}from"./popupUtils-BqD23xyi.js";import"./MeshTransform-Dz9M0eog.js";import"./mat4f64-CSKppSlJ.js";import"./quat-DBd2Nb1m.js";import"./mat3f64-q3fE-ZOt.js";import"./quatf64-aQ5IuZRd.js";import"./MeshVertexAttributes-bH-5vyf6.js";import"./MeshLocalVertexSpace-DAVvI3Z3.js";import"./meshVertexSpaceUtils-Cu1f-oO7.js";import"./earcut-D9gy186-.js";import"./Indices-D7gOIxSf.js";import"./plane-BzYZw24a.js";import"./deduplicate-C42Xb_29.js";import"./projectPointToVector-BSiCSeaS.js";import"./vertexSpaceConversion-BdhAJlfF.js";import"./spatialReferenceEllipsoidUtils-r_S_8DDe.js";import"./computeTranslationToOriginAndRotation-BhJmC_0D.js";import"./vec3-BwzP2Z1Q.js";import"./BufferView-BTSIaNVu.js";import"./vec4-CHTwQPOE.js";import"./External-B2AdFcDo.js";import"./originUtils-D69mHv66.js";import"./multiOriginJSONSupportUtils-C0wm8_Yw.js";import"./resourceUtils-D1GRkF0Y.js";import"./resourceUtils-C3dQOEyf.js";import"./saveUtils-BbjSkQM1.js";import"./resourceExtension-BAQVLtLC.js";import"./projectVectorToVector-HH_mq-I9.js";import"./sphere-BBWSjd6r.js";import"./I3SBinaryReader-CDPL8-vh.js";import"./VertexAttribute-BdZWZuT1.js";import"./floatRGBA-DH80VCn0.js";import"./NormalAttribute.glsl-pVa3pd6e.js";import"./interfaces-DDtDqZYj.js";import"./BindType-BmZEZMMh.js";import"./orientedBoundingBox-dyMOilX1.js";function te({associatedLayer:e,serviceUpdateTimeStamp:t}){var p;const r=(p=e==null?void 0:e.editingInfo)==null?void 0:p.lastEditDate,i=e==null?void 0:e.serverGens,n=r!=null,l=t!=null,d=n&&l&&t.lastUpdate!==r.getTime();return n&&(d||!l&&(i==null?void 0:i.minServerGen)!==(i==null?void 0:i.serverGen))}const yt=e=>{let t=class extends e{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){var n;const r=(n=this.associatedLayer)==null?void 0:n.timeInfo;if(r==null)return null;const i=r.clone();return Q(i,this.fieldsIndex),i}set timeInfo(r){Q(r,this.fieldsIndex),this._override("timeInfo",r)}get timeExtent(){var r;return(r=this.associatedLayer)==null?void 0:r.timeExtent}set timeExtent(r){this._override("timeExtent",r)}get timeOffset(){var r;return(r=this.associatedLayer)==null?void 0:r.timeOffset}set timeOffset(r){this._override("timeOffset",r)}get datesInUnknownTimezone(){var r;return((r=this.associatedLayer)==null?void 0:r.datesInUnknownTimezone)??!1}set datesInUnknownTimezone(r){this._override("datesInUnknownTimezone",r)}async loadTimeInfoFromService(r){const{serviceTimeInfo:i}=this;if(i==null)return;const{startTimeField:n,endTimeField:l}=i;if(n==null&&l==null||te({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const d=async c=>{var _;let h=null;try{const L=await((_=this.fetchStatistics)==null?void 0:_.call(this,c,r));h=L==null?void 0:L.stats}catch{}if(h==null)return null;const{minTimeStr:v,min:E,maxTimeStr:x,max:j}=h,S=c===n?v??E:x??j;return S!=null?new Date(S):null},[p,y]=await Promise.all([d(n),d(l)]);if(n!=null&&p==null||l!=null&&y==null)return;const f=new V({start:p,end:y});this.setAtOrigin("timeInfo",new G({endField:l,startField:n,fullTimeExtent:f}),"service")}};return s([a({type:G,json:{read:!1,write:!1}})],t.prototype,"timeInfo",null),s([a({type:V,json:{read:!1,write:!1}})],t.prototype,"timeExtent",null),s([a({type:re,json:{read:!1,write:!1}})],t.prototype,"timeOffset",null),s([a({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],t.prototype,"datesInUnknownTimezone",null),s([a({type:F,readOnly:!0,json:{read:{source:"timeInfo"}}})],t.prototype,"serviceTimeInfo",void 0),t=s([I("esri.layers.mixins.TemporalSceneLayer")],t),t};let F=class extends q{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};s([a({type:String})],F.prototype,"endTimeField",void 0),s([a({type:String})],F.prototype,"startTimeField",void 0),F=s([I("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],F);let g=class extends q{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};s([a({type:String,json:{read:!0,write:!0}})],g.prototype,"name",void 0),s([a({type:String,json:{read:!0,write:!0}})],g.prototype,"field",void 0),s([a({type:[Number],json:{read:!0,write:!0}})],g.prototype,"currentRangeExtent",void 0),s([a({type:[Number],json:{read:!0,write:!0}})],g.prototype,"fullRangeExtent",void 0),s([a({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],g.prototype,"type",void 0),g=s([I("esri.layers.support.RangeInfo")],g);var $;let D=$=class extends se(N.ofType(P)){constructor(e){super(e)}clone(){return new $(this.items.map(e=>e.clone()))}write(e,t){return this.toJSON(t)}toJSON(e){var r,i;const t=(r=e==null?void 0:e.layer)==null?void 0:r.spatialReference;return t?this.toArray().map(n=>{var d;if(!t.equals(n.spatialReference)){if(!ie(n.spatialReference,t))return(d=e==null?void 0:e.messages)==null||d.push(new k("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const p=new P;ae(n,p,t),n=p}const l=n.toJSON(e);return delete l.spatialReference,l}).filter(n=>n!=null):((i=e==null?void 0:e.messages)==null||i.push(new k("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(n=>n.toJSON(e)))}static fromJSON(e,t){const r=new $;return e.forEach(i=>r.add(P.fromJSON(i,t))),r}};D=$=s([I("esri.layers.support.PolygonCollection")],D);const O=D;var U;let b=U=class extends q{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new O,this._geometriesSource=null}initialize(){this.addHandles(ne(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,oe))}readGeometries(e,t,r){Array.isArray(e)?this.geometries=O.fromJSON(e,r):this._geometriesSource={url:le(e,r),context:r}}async loadGeometries(e,t){if(this._geometriesSource==null)return;const{url:r,context:i}=this._geometriesSource,n=await X(r,{responseType:"json",signal:t==null?void 0:t.signal}),l=e.toJSON(),d=n.data.map(p=>({...p,spatialReference:l}));this.geometries=O.fromJSON(d,i),this._geometriesSource=null}clone(){const e=new U({geometries:de(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};s([a({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],b.prototype,"spatialRelationship",void 0),s([a({type:O,nonNullable:!0,json:{write:!0}}),ot({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],b.prototype,"geometries",void 0),s([w(["web-scene","portal-item"],"geometries")],b.prototype,"readGeometries",null),b=U=s([I("esri.layers.support.SceneFilter")],b);const ft=b;async function ht({fieldName:e,statisticsInfo:t,errorContext:r,fieldsIndex:i,path:n,customParameters:l,apiKey:d,signal:p}){if(t==null)throw new u(`${r}:no-cached-statistics`,"Cached statistics are not available for this layer");const y=i.get(e);if(y==null)throw new u(`${r}:field-unexisting`,`Field '${e}' does not exist on the layer`);const f=t.find(v=>v.name===y.name);if(f==null)throw new u(`${r}:no-cached-statistics`,"Cached statistics for this attribute are not available");const c=pe(n,f.href),{data:h}=await X(c,{query:{f:"json",...l,token:d},responseType:"json",signal:p});return h}async function mt(e){const t=[];for(const r of e)r.name.toLowerCase().endsWith(".zip")?t.push(gt(r)):t.push(Promise.resolve(r));return(await Promise.all(t)).flat()}async function gt(e){const{BlobReader:t,ZipReader:r,BlobWriter:i}=await Y(()=>import("./zipjs-wrapper-DlnhoglY.js"),[]),n=[];return(await new r(new t(e)).getEntries()).forEach(d=>{var f;if(d.directory||/^__MACOS/i.test(d.filename))return;const p=new i,y=(f=d.getData)==null?void 0:f.call(d,p).then(c=>new File([c],d.filename));y&&n.push(y)}),Promise.all(n)}const wt=new Set(["3DObject","Point"]),Z=Ue();let o=class extends yt(ue(Xe(ce(ye(fe(he(me(ge(we(be(Pe))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new N,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}destroy(){this._set("renderer",null),this.associatedLayer=Ie(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var i,n,l;const r=(n=(i=this.getFeatureType(t==null?void 0:t.feature))==null?void 0:i.domains)==null?void 0:n[e];return r&&r.type!=="inherited"?r:((l=this.getField(e))==null?void 0:l.domain)??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){var e;return((e=this.associatedLayer)==null?void 0:e.types)??[]}get typeIdField(){var e;return((e=this.associatedLayer)==null?void 0:e.typeIdField)??null}get templates(){var e;return((e=this.associatedLayer)==null?void 0:e.templates)??null}get formTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.formTemplate)??null}get attributeTableTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.attributeTableTemplate)??null}get fieldsIndex(){return new ve(this.fields)}readNodePages(e,t,r){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:ee.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&Le(this.associatedLayer)}get geometryType(){return bt[this.profile]||"mesh"}set renderer(e){z(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){var C;e=e??et;const{query:t,queryRelated:r,editing:{supportsGlobalId:i,supportsRollbackOnFailure:n,supportsUploadWithItemId:l,supportsGeometryUpdate:d,supportsReturnServiceEditsInSourceSpatialReference:p},data:{supportsZ:y,supportsM:f,isVersioned:c,supportsAttachment:h},operations:{supportsEditing:v,supportsAdd:E,supportsUpdate:x,supportsDelete:j,supportsQuery:S,supportsQueryAttachments:_,supportsAsyncConvert3D:L}}=e,T=e.operations.supportsChangeTracking,A=!!((C=this.associatedLayer)!=null&&C.infoFor3D);return{query:t,queryRelated:r,editing:{supportsGlobalId:i,supportsReturnServiceEditsInSourceSpatialReference:p,supportsRollbackOnFailure:n,supportsGeometryUpdate:A&&d,supportsUploadWithItemId:l},data:{supportsAttachment:h,supportsZ:y,supportsM:f,isVersioned:c},operations:{supportsQuery:S,supportsQueryAttachments:_,supportsEditing:v&&T,supportsAdd:A&&E&&T,supportsDelete:A&&j&&T,supportsUpdate:x&&T,supportsAsyncConvert3D:L}}}get editingEnabled(){var e;return this._isOverridden("editingEnabled")?this._get("editingEnabled"):((e=this.associatedLayer)==null?void 0:e.editingEnabled)??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){var e;return((e=this.associatedLayer)==null?void 0:e.infoFor3D)??null}get relationships(){var e;return(e=this.associatedLayer)==null?void 0:e.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeOID"&&(e=r.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeGlobalID"&&(e=r.name),!!e)),e||void 0}get displayField(){var e;return((e=this.associatedLayer)==null?void 0:e.displayField)??null}readProfile(e,t){const r=t.store.profile;return r!=null&&B[r]?B[r]:(m.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}get useViewTime(){var e;return((e=this.associatedLayer)==null?void 0:e.useViewTime)??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=e!=null?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(Fe),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await Se(this,{origin:"service"},t),z(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){m.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){var t;const e=new _e;return this.geometryType==="mesh"?(t=this.associatedLayer)!=null&&t.infoFor3D&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(r=>{if(r!=null&&r.features)for(const i of r.features)i.layer=this,i.sourceLayer=this;return r})}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){var i;const r=Te(this.fieldsIndex,await ut(this,ct(this)));return pt(((i=this.parsedUrl)==null?void 0:i.path)??"",this.attributeStorageInfo??[],e,t,r,this.apiKey,this.customParameters)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||r.length===0)throw new u("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const i=new $e;return i.attributes=r[0],i.layer=this,i.sourceLayer=this,i}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(m.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return Oe(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new u("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){return await this.load(t),await this.fetchStatistics(e,t)}async saveAs(e,t){return this._debouncedSaveOperations(W.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(W.SAVE,e)}async applyEdits(e,t){const{applyEdits:r}=await Y(()=>import("./editingSupport-C5jn2YP9.js"),__vite__mapDeps([0,1,2,3]));let i=t;await this.load();const n=this.associatedLayer;if(!n)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");await n.load();const{globalIdField:l}=n,d=!!n.infoFor3D,p=(i==null?void 0:i.globalIdUsed)??!0;if(d&&l==null)throw new u(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(d&&!p)throw new u(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return K(n.url)&&d&&e.deleteFeatures!=null&&l!=null&&(i={...i,globalIdToObjectId:await Ee(n,e.deleteFeatures,l)}),r(this,n.source,e,i)}async uploadAssets(e,t){if(await this.load(),this.associatedLayer==null)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}async convertMesh(e,t){t??(t={});const r=c=>{throw m.getLogger(this).error(".convertMesh()",c.message),c};await this.load(),this.infoFor3D||r(new u("invalid:layer","SceneLayer has no capability for mesh conversion"));const i=await this.extractAndFilterFiles(e),n=i.reduce((c,h)=>it(this.infoFor3D,h)?c+1:c,0);n===0&&r(new He),n>1&&r(new Ze);const l=this.spatialReference,d=t.location??new xe({x:0,y:0,z:0,spatialReference:l}),p=d.spatialReference.isGeographic?"local":"georeferenced",y=We.createWithExternalSource(d,i,{vertexSpace:p,transform:Be(d.spatialReference),unitConversionDisabled:!0}),[f]=await this.uploadAssets([y],{...t,useAssetOrigin:!t.location});return f}async extractAndFilterFiles(e){await this.load();const t=this.infoFor3D;return t?(await mt(e)).filter(r=>at(t,r)):e}validateLayer(e){if(e.layerType&&!wt.has(e.layerType))throw new u("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new u("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new u("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(r,i){let n=!1,l=!1;if(r==null)n=!0,l=!0;else{const d=i&&i.isGeographic;switch(r){case"east-north-up":case"earth-centered":n=!0,l=d;break;case"vertex-reference-frame":n=!0,l=!d;break;default:n=!1}}if(!n)throw new u("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new u("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new u("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){var e,t,r;if(this._fieldUsageInfo={},this.fields)for(const i of this.fields){const n=!!((e=this.attributeStorageInfo)!=null&&e.some(p=>p.name===i.name)),l=!!((r=(t=this.associatedLayer)==null?void 0:t.fields)!=null&&r.some(p=>p&&i.name===p.name)),d={supportsLabelingInfo:n,supportsRenderer:n,supportsPopupTemplate:n||l,supportsLayerQuery:l};this._fieldUsageInfo[i.name]=d}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){var t;if(!((t=this.associatedLayer)!=null&&t.fields))return;let e=null;for(const r of this.associatedLayer.fields){const i=this.getField(r.name);i?(!i.domain&&r.domain&&(i.domain=r.domain.clone()),i.editable=r.editable,i.nullable=r.nullable,i.length=r.length):(e||(e=this.fields?this.fields.slice():[]),e.push(r.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=J(this);for(let r=0;r<e.length;r++){const i=e[r],n=this.originIdOf(i),l=this.associatedLayer.originIdOf(i);n<l&&(l===R.SERVICE||l===R.PORTAL_ITEM)&&t.setAtOrigin(i,this.associatedLayer[i],l)}}_applyAssociatedLayerExtentOverride(){var t,r,i;const e=(t=this.associatedLayer)==null?void 0:t.getAtOrigin("fullExtent","service");((r=this.associatedLayer)==null?void 0:r.infoFor3D)==null||!e||!K((i=this.associatedLayer)==null?void 0:i.url)||!te(this)||J(this).setAtOrigin("fullExtent",e.clone(),R.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:i}=await Ye(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),n=await nt.FeatureLayer();this.associatedLayer=new n({url:t,customParameters:this.customParameters,layerId:r,portalItem:i}),await this.associatedLayer.load()}catch(t){je(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await Ae(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?m.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):m.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&H(m.getLogger(this),lt("Mesh scene layers","relative-to-scene",e)),H(m.getLogger(this),dt("Scene layers",e))}async fetchStatistics(e,t){var r;return await ht({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:((r=this.parsedUrl)==null?void 0:r.path)??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:t==null?void 0:t.signal})}};s([a({types:{key:"type",base:De,typeMap:{selection:Re}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],o.prototype,"featureReduction",void 0),s([a({type:[g],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],o.prototype,"rangeInfos",void 0),s([a({json:{read:!1}})],o.prototype,"associatedLayer",void 0),s([a({type:["show","hide"]})],o.prototype,"listMode",void 0),s([a({type:["ArcGISSceneServiceLayer"]})],o.prototype,"operationalLayerType",void 0),s([a({json:{read:!1},readOnly:!0})],o.prototype,"type",void 0),s([a({...Z.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"fields",void 0),s([a()],o.prototype,"types",null),s([a()],o.prototype,"typeIdField",null),s([a()],o.prototype,"templates",null),s([a()],o.prototype,"formTemplate",null),s([a()],o.prototype,"attributeTableTemplate",null),s([a({readOnly:!0,clonable:!1})],o.prototype,"fieldsIndex",null),s([a({type:qe,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],o.prototype,"floorInfo",void 0),s([a(Z.outFields)],o.prototype,"outFields",void 0),s([a({type:ee,readOnly:!0,json:{read:!1}})],o.prototype,"nodePages",void 0),s([w("service","nodePages",["nodePages","pointNodePages"])],o.prototype,"readNodePages",null),s([a({type:[tt],readOnly:!0})],o.prototype,"materialDefinitions",void 0),s([a({type:[rt],readOnly:!0})],o.prototype,"textureSetDefinitions",void 0),s([a({type:[st],readOnly:!0})],o.prototype,"geometryDefinitions",void 0),s([a({readOnly:!0})],o.prototype,"serviceUpdateTimeStamp",void 0),s([a({readOnly:!0})],o.prototype,"attributeStorageInfo",void 0),s([a({readOnly:!0})],o.prototype,"statisticsInfo",void 0),s([a({type:N.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],o.prototype,"excludeObjectIds",void 0),s([a({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],o.prototype,"definitionExpression",void 0),s([a({type:ft,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],o.prototype,"filter",void 0),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),s([a(Ne)],o.prototype,"elevationInfo",null),s([a({readOnly:!0,json:{read:!1}})],o.prototype,"effectiveCapabilities",null),s([a({readOnly:!0})],o.prototype,"effectiveEditingEnabled",null),s([a({type:String})],o.prototype,"geometryType",null),s([a(Ce)],o.prototype,"labelsVisible",void 0),s([a({type:[Ge],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:M},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:M},write:!0}})],o.prototype,"labelingInfo",void 0),s([a(Ve)],o.prototype,"legendEnabled",void 0),s([a({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var i,n;if(typeof e=="number"&&e>=0&&e<=1)return e;const r=(n=(i=t.layerDefinition)==null?void 0:i.drawingInfo)==null?void 0:n.transparency;return r!==void 0?Qe(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],o.prototype,"opacity",void 0),s([a({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"priority",void 0),s([a({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"semantic",void 0),s([a({types:ke,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],o.prototype,"renderer",null),s([a({json:{read:!1}})],o.prototype,"cachedDrawingInfo",void 0),s([w("service","cachedDrawingInfo")],o.prototype,"readCachedDrawingInfo",null),s([a({readOnly:!0,json:{read:!1}})],o.prototype,"capabilities",null),s([a({type:Boolean,json:{read:!1}})],o.prototype,"editingEnabled",null),s([a({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"infoFor3D",null),s([a({readOnly:!0,json:{write:!1,read:!1}})],o.prototype,"relationships",null),s([a(ze)],o.prototype,"popupEnabled",void 0),s([a({type:Ke,json:{name:"popupInfo",write:!0}})],o.prototype,"popupTemplate",void 0),s([a({readOnly:!0,json:{read:!1}})],o.prototype,"defaultPopupTemplate",null),s([a({type:String,json:{read:!1}})],o.prototype,"objectIdField",void 0),s([w("service","objectIdField",["objectIdField","fields"])],o.prototype,"readObjectIdField",null),s([a({type:String,json:{read:!1}})],o.prototype,"globalIdField",void 0),s([w("service","globalIdField",["globalIdField","fields"])],o.prototype,"readGlobalIdField",null),s([a({readOnly:!0,type:String,json:{read:!1}})],o.prototype,"displayField",null),s([a({type:String,json:{read:!1}})],o.prototype,"profile",void 0),s([w("service","profile",["store.profile"])],o.prototype,"readProfile",null),s([a({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],o.prototype,"normalReferenceFrame",void 0),s([a(Je)],o.prototype,"screenSizePerspectiveEnabled",void 0),s([a({json:{read:!1,origins:{service:{read:!0}}}})],o.prototype,"serviceItemId",void 0),s([a(Me)],o.prototype,"useViewTime",null),o=s([I("esri.layers.SceneLayer")],o);const B={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},bt={"mesh-pyramids":"mesh",points:"point"},hr=o;export{hr as default};
